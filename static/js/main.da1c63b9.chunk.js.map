{"version":3,"sources":["components/PriceBlock.tsx","store/reducers/boxesReducer.ts","components/BlockWithData.tsx","App.tsx","store/store.ts","index.tsx"],"names":["PriceBlock","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useState3","_useState4","price","setPrice","data","useSelector","state","boxes","checkedPoints","Object","values","map","box","filter","point","checked","flat","_jsxs","children","className","_jsx","Button","style","length","color","fontWeight","transform","boxShadow","disabled","onClick","totalPrice","reduce","acc","el","variant","concat","Modal","onClose","Box","sx","position","top","left","minWidth","bgcolor","border","pt","px","pb","Typography","marginBottom","id","component","Math","round","initState","box1","title","v1","box2","box3","boxSlice","createSlice","name","initialState","reducers","SelectService","action","pointId","payload","boxNumber","findIndex","boxReducer","reducer","actions","BlockWithData","React","memo","_ref","currentBox","checkboxClick","FormGroup","i","FormControlLabel","control","Checkbox","label","fontSize","App","document","boxToShow","setBoxToShow","dispatch","useDispatch","newStyle","setNewStyle","useEffect","setTimeout","checkboxId","rootReducers","combineReducers","store","configureStore","ReactDOM","render","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.da1c63b9.chunk.js","sourcesContent":["import {Box, Button, Modal, Typography} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../store/store\";\r\nimport {boxSliceStateType} from \"../store/reducers/boxesReducer\";\r\n\r\nexport const PriceBlock = () => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [price, setPrice] = useState(0)\r\n    const data = useSelector<RootStoreType, boxSliceStateType>(state => state.boxes)\r\n\r\n    const boxes = Object.values(data)\r\n    const checkedPoints = boxes.map(box => {\r\n        return box.filter(point => point.checked)\r\n    }).flat()\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const buttonClick = () => {\r\n        const totalPrice = checkedPoints.reduce((acc, el) => acc + +el.price, 0)\r\n        setPrice(totalPrice)\r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={'btn_wrapper'}>\r\n                <Button style={checkedPoints.length < 3 ? {\r\n                    color: '#346ba3',\r\n                    fontWeight: 'bold',\r\n                    transform: 'scale(1.35)',\r\n                    boxShadow: '2px 2px 2px black'\r\n                } : {transform: 'scale(1.35', boxShadow: '4px 4px 2px #897979'}}\r\n                        disabled={checkedPoints.length < 3} onClick={buttonClick} variant=\"contained\">\r\n                    {\r\n                        checkedPoints.length < 3 ? `Выбрано ${checkedPoints.length} / 3` : 'Рассчитать'\r\n                    }\r\n                </Button>\r\n                <span\r\n                    className={checkedPoints.length > 2 ? 'show_selected_count' : 'hide_selected_count'}>Выбрано {checkedPoints.length} {checkedPoints.length >= 2 && checkedPoints.length < 5 ? 'зоны' : 'зон'}\r\n                </span>\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    minWidth: 200,\r\n                    bgcolor: 'background.paper',\r\n                    border: '2px solid #000',\r\n                    boxShadow: 24,\r\n                    pt: 2,\r\n                    px: 4,\r\n                    pb: 3,\r\n                }}>\r\n                    <Typography style={{marginBottom: '20px'}} id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                        Стоимость\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" variant=\"h5\" component=\"h2\">\r\n                        {Math.round(price * 0.8) + ' BYN'}\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {v1} from 'uuid'\r\n\r\nconst initState: boxSliceStateType = {\r\n    box1: [\r\n        {price: '22', title: 'Межбровье', id: v1(), checked: false},\r\n        {price: '22', title: 'Надгубная зона', id: v1(), checked: false},\r\n        {price: '35', title: 'Носогубный треугольник', id: v1(), checked: false},\r\n        {price: '30', title: 'Щёки', id: v1(), checked: false},\r\n        {price: '30', title: 'Виски', id: v1(), checked: false},\r\n        {price: '22', title: 'Подбородок', id: v1(), checked: false},\r\n        {price: '55', title: 'Лицо полностью', id: v1(), checked: false},\r\n        {price: '30', title: 'Шея', id: v1(), checked: false},\r\n    ],\r\n    box2: [\r\n        {price: '35', title: 'Подмышки', id: v1(), checked: false},\r\n        {price: '55', title: 'Плечи', id: v1(), checked: false},\r\n        {price: '55', title: 'Руки до локтя (от плеча/от кисти до локтя)', id: v1(), checked: false},\r\n        {price: '22', title: 'Кисти рук', id: v1(), checked: false},\r\n        {price: '90', title: 'Руки полностью', id: v1(), checked: false},\r\n        {price: '22', title: 'Ареолы', id: v1(), checked: false},\r\n        {price: '80', title: 'Грудь полностью', id: v1(), checked: false},\r\n        {price: '22', title: 'Полоска живота', id: v1(), checked: false},\r\n    ],\r\n    box3: [\r\n        {price: '80', title: 'Живот', id: v1(), checked: false},\r\n        {price: '60', title: 'Спина', id: v1(), checked: false},\r\n        {price: '55', title: 'Бикини классическое', id: v1(), checked: false},\r\n        {price: '75', title: 'Глубокое бикини', id: v1(), checked: false},\r\n        {price: '55', title: 'Ягодицы', id: v1(), checked: false},\r\n        {price: '85', title: 'Бёдра', id: v1(), checked: false},\r\n        {price: '75', title: 'Голени', id: v1(), checked: false},\r\n        {price: '120', title: 'Ноги полностью', id: v1(), checked: false},\r\n    ]\r\n}\r\n\r\nexport type BoxType = {\r\n    price: string\r\n    title: string\r\n    id: string\r\n    checked: boolean\r\n}\r\nexport type BoxNumberType = 'box1' | 'box2' | 'box3'\r\n\r\nexport type boxSliceStateType = {\r\n    [key in BoxNumberType]: BoxType[];\r\n};\r\n\r\nexport const boxSlice = createSlice({\r\n    name: 'box',\r\n    initialState: initState,\r\n    reducers: {\r\n        SelectService(state, action: PayloadAction<{ boxNumber: BoxNumberType, id: string }>) {\r\n            const pointId = state[action.payload.boxNumber].findIndex(el => el.id === action.payload.id)\r\n            state[action.payload.boxNumber][pointId].checked = !state[action.payload.boxNumber][pointId].checked\r\n        }\r\n    }\r\n})\r\n\r\nexport const boxReducer = boxSlice.reducer\r\nexport const {SelectService} = boxSlice.actions\r\n","import {Box, Checkbox, FormControlLabel, FormGroup} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {RootStoreType} from \"../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {BoxNumberType} from \"../store/reducers/boxesReducer\";\r\n\r\ntype BlockWithDataType = {\r\n    currentBox: BoxNumberType\r\n    checkboxClick: (checkboxId: string) => void\r\n}\r\n\r\n\r\nexport const BlockWithData = React.memo(({currentBox, checkboxClick}: BlockWithDataType) => {\r\n\r\n\r\n    const data = useSelector((state: RootStoreType) => state.boxes[currentBox])\r\n\r\n\r\n    return (\r\n        <div className={'checkBoxes_wrapper'}>\r\n            <FormGroup>\r\n                {data.map((el, i) =>\r\n                    <FormControlLabel key={i}\r\n                                      control={<Checkbox\r\n                                          checked={el.checked} id={el.id}\r\n                                          onClick={() => checkboxClick(el.id)}/>}\r\n                                      label={<Box component=\"div\" fontWeight={500} fontSize={26}>\r\n                                          {el.title}\r\n                                      </Box>}/>\r\n                )}\r\n            </FormGroup>\r\n        </div>\r\n    )\r\n})","import './App.css';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {PriceBlock} from \"./components/PriceBlock\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {BoxNumberType, SelectService} from \"./store/reducers/boxesReducer\";\r\nimport {BlockWithData} from \"./components/BlockWithData\";\r\n\r\nfunction App() {\r\n    document.title = 'Калькулятор'\r\n    const [boxToShow, setBoxToShow] = useState<BoxNumberType>('box1')\r\n    const dispatch = useDispatch()\r\n    const [newStyle, setNewStyle] = useState<boolean>(true)\r\n\r\n    const checkboxClick = (checkboxId: string) => {\r\n        dispatch(SelectService({boxNumber: boxToShow, id: checkboxId}))\r\n    }\r\n    useEffect(() => {\r\n        setNewStyle(true)\r\n    }, [newStyle])\r\n\r\n    const nextBlock = () => {\r\n        setTimeout(() => {\r\n            boxToShow === 'box3' && setBoxToShow(\"box1\")\r\n            boxToShow === 'box2' && setBoxToShow(\"box3\")\r\n            boxToShow === 'box1' && setBoxToShow(\"box2\")\r\n        }, 0)\r\n        setNewStyle(false)\r\n    }\r\n\r\n    const prevBlock = () => {\r\n        setTimeout(() => {\r\n            boxToShow === 'box3' && setBoxToShow(\"box2\")\r\n            boxToShow === 'box2' && setBoxToShow(\"box1\")\r\n            boxToShow === 'box1' && setBoxToShow(\"box3\")\r\n        }, 0)\r\n        setNewStyle(false)\r\n    }\r\n\r\n    return (\r\n        <div className={newStyle ? 'show' : 'hide'}>\r\n            <div className={'points_container'}>\r\n                <span className={'left_arrow'} onClick={prevBlock}> {'<'} </span>\r\n                <BlockWithData currentBox={boxToShow} checkboxClick={checkboxClick}/>\r\n                <span className={'right_arrow'} onClick={nextBlock}> {'>'}</span>\r\n            </div>\r\n            <PriceBlock/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers} from \"redux\";\r\nimport {boxReducer} from \"./reducers/boxesReducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst rootReducers = combineReducers({\r\n    boxes: boxReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducers,\r\n})\r\n\r\nexport type RootStoreType = ReturnType<typeof rootReducers>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./store/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n\r\n"],"sourceRoot":""}