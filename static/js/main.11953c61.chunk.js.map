{"version":3,"sources":["PriceBlock.js","App.js","reportWebVitals.js","index.js"],"names":["PriceBlock","props","style","position","top","left","transform","width","textAlign","bgcolor","border","boxShadow","p","button_style","window","innerWidth","useState","open","setOpen","price","setPrice","className","Button","disabled","onClick","reduce","acc","el","variant","Modal","onClose","aria-labelledby","aria-describedby","Box","sx","Typography","id","component","mt","fontSize","toFixed","React","memo","FormGroup","data","map","i","FormControlLabel","control","Checkbox","checkboxClick","label","title","App","document","selectedBox","setSelectedBox","e","target","checked","push","filter","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"q8EAGaA,EAAa,SAACC,GAEvB,IAAMC,EAAQ,CACVC,SAAU,WACVC,IAAK,QACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,QACPC,UAAU,SACVC,QAAS,mBACTC,OAAQ,iBACRC,UAAW,GACXC,EAAG,GAEDC,EAAe,CACjBR,KAAM,OAENS,OAAOC,WAAa,OACpBb,EAAMG,KAAO,QACbQ,EAAaR,KAAM,OAnBU,MAsBTW,oBAAS,GAtBA,mBAsB1BC,EAtB0B,KAsBpBC,EAtBoB,OAuBPF,mBAAS,GAvBF,mBAuB1BG,EAvB0B,KAuBnBC,EAvBmB,KA8BjC,OACI,sBAAKC,UAAW,cAAhB,UACI,cAACC,EAAA,EAAD,CAAQpB,MAAOW,EAAcU,SAAUtB,EAAMsB,SAAUC,QAN3C,WAChBJ,EAASnB,EAAMkB,MAAMM,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,MAC/CT,GAAQ,IAIyEU,QAAQ,YAArF,0EACA,cAACC,EAAA,EAAD,CACIZ,KAAMA,EACNa,QAXQ,kBAAMZ,GAAQ,IAYtBa,kBAAgB,oBAChBC,mBAAiB,0BAJrB,SAMI,eAACC,EAAA,EAAD,CAAKC,GAAIhC,EAAT,UACI,cAACiC,EAAA,EAAD,CAAYC,GAAG,oBAAoBR,QAAQ,KAAKS,UAAU,KAA1D,oEAGA,cAACF,EAAA,EAAD,CAAYC,GAAG,0BAA0BF,GAAI,CAACI,GAAI,EAAGC,SAAU,QAA/D,UACc,GAARpB,GAAaqB,QAAQ,GAAK,kBCnBpD,IAAMP,EAAMQ,IAAMC,MAAK,SAACzC,GAEpB,OACI,qBAAKoB,UAAW,mBAAhB,SACI,cAACsB,EAAA,EAAD,UACKC,EAAKC,KAAI,SAAClB,EAAImB,GAAL,OACN,cAACC,EAAA,EAAD,CACkBC,QAAS,cAACC,EAAA,EAAD,CAAUb,GAAIT,EAAGR,MAAOK,QAASvB,EAAMiD,gBAChDC,MAAOxB,EAAGyB,OAFLN,aAQ5BO,EApCf,WACIC,SAASF,MAAQ,qEADN,MAE2BpC,mBAAS,IAFpC,mBAEJuC,EAFI,KAESC,EAFT,KAYX,OACI,qCACA,qBAAKnC,UAAW,iBAAhB,SACI,cAAC,EAAD,CAAK6B,cAZS,SAACO,GACfA,EAAEC,OAAOC,SACTJ,EAAYK,MAAMH,EAAEC,OAAOtB,IAC3BoB,EAAe,YAAID,KAEnBC,EAAeD,EAAYM,QAAO,SAAAlC,GAAE,OAAIA,KAAQ8B,EAAEC,OAAOtB,YASzD,cAAC,EAAD,CAAYb,SAAUgC,EAAYO,OAAS,EAAG3C,MAAOoC,QCXlDQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASqB,eAAe,SAM1BZ,M","file":"static/js/main.11953c61.chunk.js","sourcesContent":["import {Box, Button, Modal, Typography} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\n\r\nexport const PriceBlock = (props) => {\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '500px',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: '250px',\r\n        textAlign:'center',\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #000',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n    const button_style = {\r\n        left: '46%'\r\n    }\r\n    if (window.innerWidth < 1300) {\r\n        style.left = '52.7%'\r\n        button_style.left ='42%'\r\n    }\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [price, setPrice] = useState(0)\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const buttonClick = () => {\r\n        setPrice(props.price.reduce((acc, el) => acc + el))\r\n        setOpen(true)\r\n    }\r\n    return (\r\n        <div className={'price_block'}>\r\n            <Button style={button_style} disabled={props.disabled} onClick={buttonClick} variant=\"contained\">Рассчитать</Button>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Стоимость\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" sx={{mt: 2, fontSize: '20px'}}>\r\n                        {(price * 0.7).toFixed(2) + ' BYN'}\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport React, {useState} from \"react\";\nimport {Checkbox, FormControlLabel, FormGroup} from \"@mui/material\";\nimport data from './data.json'\nimport {PriceBlock} from \"./PriceBlock\";\n\nfunction App() {\n    document.title = 'Калькулятор'\n    const [selectedBox, setSelectedBox] = useState([])\n    const checkboxClick = (e) => {\n        if (e.target.checked) {\n            selectedBox.push(+e.target.id)\n            setSelectedBox([...selectedBox])\n        } else {\n            setSelectedBox(selectedBox.filter(el => el !== +e.target.id))\n        }\n    }\n\n    return (\n        <>\n        <div className={'grid-container'}>\n            <Box checkboxClick={checkboxClick}/>\n        </div>\n            <PriceBlock disabled={selectedBox.length < 3} price={selectedBox}/>\n        </>\n    );\n}\n\nconst Box = React.memo((props) => {\n\n    return (\n        <div className={'checkbox-wrapper'}>\n            <FormGroup>\n                {data.map((el, i) =>\n                    <FormControlLabel key={i}\n                                      control={<Checkbox id={el.price} onClick={props.checkboxClick}/>}\n                                      label={el.title}/>\n                )}\n            </FormGroup>\n        </div>\n    )\n})\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}