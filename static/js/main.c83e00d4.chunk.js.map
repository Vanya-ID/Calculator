{"version":3,"sources":["components/PriceBlock.tsx","store/reducers/boxesReducer.ts","components/BlockWithData.tsx","App.tsx","store/store.ts","index.tsx"],"names":["PriceBlock","useState","open","setOpen","price","setPrice","data","useSelector","state","boxes","checkedPoints","Object","values","map","box","filter","point","checked","flat","className","Button","style","length","color","fontWeight","transform","boxShadow","disabled","onClick","totalPrice","reduce","acc","el","variant","Modal","onClose","aria-labelledby","aria-describedby","Box","sx","position","top","left","minWidth","bgcolor","border","pt","px","pb","Typography","marginBottom","id","component","Math","round","initState","box1","title","v1","box2","box3","boxSlice","createSlice","name","initialState","reducers","SelectService","action","pointId","payload","boxNumber","findIndex","boxReducer","reducer","actions","BlockWithData","React","memo","currentBox","checkboxClick","FormGroup","i","FormControlLabel","control","Checkbox","label","fontSize","App","document","boxToShow","setBoxToShow","dispatch","useDispatch","newStyle","setNewStyle","useEffect","setTimeout","checkboxId","rootReducers","combineReducers","store","configureStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c83e00d4.chunk.js","sourcesContent":["import {Box, Button, Modal, Typography} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {RootStoreType} from \"../store/store\";\r\nimport {boxSliceStateType} from \"../store/reducers/boxesReducer\";\r\n\r\nexport const PriceBlock = () => {\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [price, setPrice] = useState(0)\r\n    const data = useSelector<RootStoreType, boxSliceStateType>(state => state.boxes)\r\n\r\n    const boxes = Object.values(data)\r\n    const checkedPoints = boxes.map(box => {\r\n        return box.filter(point => point.checked)\r\n    }).flat()\r\n\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const buttonClick = () => {\r\n        const totalPrice = checkedPoints.reduce((acc, el) => acc + +el.price, 0)\r\n        setPrice(totalPrice)\r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={'btn_wrapper'}>\r\n                <Button style={checkedPoints.length < 3 ? {\r\n                    color: '#346ba3',\r\n                    fontWeight: 'bold',\r\n                    transform: 'scale(1.35)',\r\n                    boxShadow: '2px 2px 2px black'\r\n                } : {transform: 'scale(1.35', boxShadow: '4px 4px 2px #897979'}}\r\n                        disabled={checkedPoints.length < 3} onClick={buttonClick} variant=\"contained\">\r\n                    {\r\n                        checkedPoints.length < 3 ? `Выбрано ${checkedPoints.length} / 3` : 'Рассчитать'\r\n                    }\r\n                </Button>\r\n                <span\r\n                    className={checkedPoints.length > 2 ? 'show_selected_count' : 'hide_selected_count'}>Выбрано {checkedPoints.length} {checkedPoints.length >= 2 && checkedPoints.length < 5 ? 'зоны' : 'зон'}\r\n                </span>\r\n            </div>\r\n            <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    minWidth: 200,\r\n                    bgcolor: 'background.paper',\r\n                    border: '2px solid #000',\r\n                    boxShadow: 24,\r\n                    pt: 2,\r\n                    px: 4,\r\n                    pb: 3,\r\n                }}>\r\n                    <Typography style={{marginBottom: '20px'}} id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n                        Стоимость\r\n                    </Typography>\r\n                    <Typography id=\"modal-modal-description\" variant=\"h5\" component=\"h2\">\r\n                        {Math.round(price * 0.8) + ' BYN'}\r\n                    </Typography>\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {v1} from 'uuid'\r\n\r\nconst initState: boxSliceStateType = {\r\n    box1: [\r\n        {price: '19', title: 'Межбровье', id: v1(), checked: false},\r\n        {price: '19', title: 'Надгубная зона', id: v1(), checked: false},\r\n        {price: '27', title: 'Носогубный треугольник', id: v1(), checked: false},\r\n        {price: '24', title: 'Щёки', id: v1(), checked: false},\r\n        {price: '24', title: 'Виски', id: v1(), checked: false},\r\n        {price: '19', title: 'Подбородок', id: v1(), checked: false},\r\n        {price: '49', title: 'Лицо полностью', id: v1(), checked: false},\r\n        {price: '24', title: 'Шея', id: v1(), checked: false},\r\n    ],\r\n    box2: [\r\n        {price: '29', title: 'Подмышки', id: v1(), checked: false},\r\n        {price: '48', title: 'Плечи', id: v1(), checked: false},\r\n        {price: '48', title: 'Руки до локтя (от плеча/от кисти до локтя)', id: v1(), checked: false},\r\n        {price: '19', title: 'Кисти рук', id: v1(), checked: false},\r\n        {price: '84', title: 'Руки полностью', id: v1(), checked: false},\r\n        {price: '19', title: 'Ареолы', id: v1(), checked: false},\r\n        {price: '72', title: 'Грудь полностью', id: v1(), checked: false},\r\n        {price: '19', title: 'Полоска живота', id: v1(), checked: false},\r\n    ],\r\n    box3: [\r\n        {price: '72', title: 'Живот', id: v1(), checked: false},\r\n        {price: '84', title: 'Спина', id: v1(), checked: false},\r\n        {price: '48', title: 'Бикини классическое', id: v1(), checked: false},\r\n        {price: '68', title: 'Глубокое бикини', id: v1(), checked: false},\r\n        {price: '48', title: 'Ягодицы', id: v1(), checked: false},\r\n        {price: '78', title: 'Бёдра', id: v1(), checked: false},\r\n        {price: '68', title: 'Голени', id: v1(), checked: false},\r\n        {price: '108', title: 'Ноги полностью', id: v1(), checked: false},\r\n    ]\r\n}\r\n\r\nexport type BoxType = {\r\n    price: string\r\n    title: string\r\n    id: string\r\n    checked: boolean\r\n}\r\nexport type BoxNumberType = 'box1' | 'box2' | 'box3'\r\n\r\nexport type boxSliceStateType = {\r\n    [key in BoxNumberType]: BoxType[];\r\n};\r\n\r\nexport const boxSlice = createSlice({\r\n    name: 'box',\r\n    initialState: initState,\r\n    reducers: {\r\n        SelectService(state, action: PayloadAction<{ boxNumber: BoxNumberType, id: string }>) {\r\n            const pointId = state[action.payload.boxNumber].findIndex(el => el.id === action.payload.id)\r\n            state[action.payload.boxNumber][pointId].checked = !state[action.payload.boxNumber][pointId].checked\r\n        }\r\n    }\r\n})\r\n\r\nexport const boxReducer = boxSlice.reducer\r\nexport const {SelectService} = boxSlice.actions\r\n","import {Box, Checkbox, FormControlLabel, FormGroup} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {RootStoreType} from \"../store/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {BoxNumberType} from \"../store/reducers/boxesReducer\";\r\n\r\ntype BlockWithDataType = {\r\n    currentBox: BoxNumberType\r\n    checkboxClick: (checkboxId: string) => void\r\n}\r\n\r\n\r\nexport const BlockWithData = React.memo(({currentBox, checkboxClick}: BlockWithDataType) => {\r\n\r\n\r\n    const data = useSelector((state: RootStoreType) => state.boxes[currentBox])\r\n\r\n\r\n    return (\r\n        <div className={'checkBoxes_wrapper'}>\r\n            <FormGroup>\r\n                {data.map((el, i) =>\r\n                    <FormControlLabel key={i}\r\n                                      control={<Checkbox\r\n                                          checked={el.checked} id={el.id}\r\n                                          onClick={() => checkboxClick(el.id)}/>}\r\n                                      label={<Box component=\"div\" fontWeight={500} fontSize={26}>\r\n                                          {el.title}\r\n                                      </Box>}/>\r\n                )}\r\n            </FormGroup>\r\n        </div>\r\n    )\r\n})","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport {PriceBlock} from \"./components/PriceBlock\";\nimport {useDispatch} from \"react-redux\";\nimport {BoxNumberType, SelectService} from \"./store/reducers/boxesReducer\";\nimport {BlockWithData} from \"./components/BlockWithData\";\n\nfunction App() {\n    document.title = 'Калькулятор'\n    const [boxToShow, setBoxToShow] = useState<BoxNumberType>('box1')\n    const dispatch = useDispatch()\n    const [newStyle, setNewStyle] = useState<boolean>(true)\n\n    const checkboxClick = (checkboxId: string) => {\n        dispatch(SelectService({boxNumber: boxToShow, id: checkboxId}))\n    }\n    useEffect(() => {\n        setNewStyle(true)\n    }, [newStyle])\n\n    const nextBlock = () => {\n        setTimeout(() => {\n            boxToShow === 'box3' && setBoxToShow(\"box1\")\n            boxToShow === 'box2' && setBoxToShow(\"box3\")\n            boxToShow === 'box1' && setBoxToShow(\"box2\")\n        }, 0)\n        setNewStyle(false)\n    }\n\n    const prevBlock = () => {\n        setTimeout(() => {\n            boxToShow === 'box3' && setBoxToShow(\"box2\")\n            boxToShow === 'box2' && setBoxToShow(\"box1\")\n            boxToShow === 'box1' && setBoxToShow(\"box3\")\n        }, 0)\n        setNewStyle(false)\n    }\n\n    return (\n        <div className={newStyle ? 'show' : 'hide'}>\n            <div className={'points_container'}>\n                <span className={'left_arrow'} onClick={prevBlock}> {'<'} </span>\n                <BlockWithData currentBox={boxToShow} checkboxClick={checkboxClick}/>\n                <span className={'right_arrow'} onClick={nextBlock}> {'>'}</span>\n            </div>\n            <PriceBlock/>\n        </div>\n    );\n}\n\nexport default App;\n","import {combineReducers} from \"redux\";\r\nimport {boxReducer} from \"./reducers/boxesReducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst rootReducers = combineReducers({\r\n    boxes: boxReducer\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducers,\r\n})\r\n\r\nexport type RootStoreType = ReturnType<typeof rootReducers>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n\n"],"sourceRoot":""}